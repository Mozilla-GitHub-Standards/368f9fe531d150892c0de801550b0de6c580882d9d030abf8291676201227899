AddType image/svg+xml .svg

WSGISocketPrefix run/wsgi

# UserAgents we will normally want to ignore (internal & monitoring) (bug 1010323)
BrowserMatch ^HTTP-Monitor/ dontlog
BrowserMatch ^collectd/     dontlog

# Don't log connections from localhost either
SetEnvIf Remote_Addr "127\.0\.0\.1" dontlog
SetEnvIf Remote_Addr "::1" dontlog

<VirtualHost *:80>
  ServerName https://{{ domain }}
  CustomLog /var/log/httpd/{{ domain }}/access_log proxy env=!dontlog
  ErrorLog /var/log/httpd/{{ domain }}/error_log

  AddOutputFilterByType DEFLATE text/html
  AddOutputFilterByType DEFLATE text/css
  AddOutputFilterByType DEFLATE image/svg+xml
  AddOutputFilterByType DEFLATE application/json
  AddOutputFilterByType DEFLATE application/x-javascript

  Alias /static/ {{ approot }}/dxr/dxr/static/

  SetEnv DXR_CONFIG {{ sitehome }}/dxr.config
  # threads=1 because I'm not sure if trilite is threadsafe
  WSGIDaemonProcess dxr python-path={{ approot }}/virtualenv/lib/python2.7/site-packages processes={{ wsgi_processes }} threads=1 maximum-requests=500
  WSGIProcessGroup dxr
  WSGIScriptAlias / {{ approot }}/dxr/dxr/wsgi.py

  <Directory {{ approot }}>
    Order allow,deny
    Allow from all
  </Directory>

  # Configure an SSO application at the $APPURL provided when generating the metadata XML
  <Location /addons>
    # The endpoint provided when generating the metadata XML
    MellonEndpointPath /addons/mellon

    # The generated private key, certificate, and metadata XML files
    MellonSPPrivateKeyFile /etc/httpd/mellon/{{ domain }}_addons.key
    MellonSPCertFile /etc/httpd/mellon/{{ domain }}_addons.cert
    MellonSPMetadataFile /etc/httpd/mellon/{{ domain }}_addons.xml

    # The IdP metadata XML binds this app to our SSO IdP (Okta)
    MellonIdPMetadataFile /etc/httpd/mellon/{{ domain }}_addons.idp-metadata.xml

    MellonSecureCookie On
    MellonSubjectConfirmationDataAddressCheck Off
  </Location>

  # This public, unrestricted endpoint is necessary for SAML communication with Mellon
  <Location /addons/mellon>
    # We do NOT specify MellonEnable "none" here, because we need Mellon to process
    # requests to this endpoint.

    # Disable authentication for this endpoint
    AuthType none

    # Allow all requests to this endpoint
    Order allow,deny
    Allow from all
    Satisfy any
  </Location>

  <Location /addons>
    # Mellon will intercept requests that do not provide a non-expired session
    # cookie and redirect them momentarily to Okta.
    MellonEnable "auth"
    AuthType Mellon
    # Ensure that we authenticated a valid user through Okta and Mellon. This provides
    # a layer of defense against unplanned issues.
    require valid-user
  </Location>

</VirtualHost>

