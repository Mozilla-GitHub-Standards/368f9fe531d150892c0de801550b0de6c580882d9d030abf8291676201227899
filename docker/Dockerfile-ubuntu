FROM ubuntu:14.10
MAINTAINER Kendall Libby <klibby@mozilla.com>

RUN apt-get update
RUN apt-get install -y \
    build-essential \
    clang libclang-dev \
    curl \
    git \
    file \
    mercurial \
    libxml2-dev libxslt1-dev nodejs npm \
    libpython2.7 \
    libpython2.7-dev \
    libyaml-dev \
    python2.7 \
    python2.7-dev \
    python-pip \
    python-virtualenv \
    vim \
    perl libc6-dev-i386 gcc-multilib g++-multilib llvm llvm-dev libz-dev \
    freeglut3-dev \
    libfreetype6-dev libgl1-mesa-dri libglib2.0-dev xorg-dev \
    gperf g++ cmake libssl-dev libbz2-dev libosmesa6-dev libxmu6 libxmu-dev
RUN apt-get build-dep -y clang llvm

COPY requirements.txt /requirements.txt
RUN pip install -r /requirements.txt

ENV SHELL /bin/bash
ENV DXR_BRANCH es
ENV DXR_REPO https://github.com/mozilla/dxr.git
ENV DXR_HOME /builds/dxr-build-env
ENV LC_ALL C
ENV LD_LIBRARY_PATH $DXR_HOME/dxr/trilite
ENV PATH /usr/lib64/ccache:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin

RUN mkdir -p $DXR_HOME
WORKDIR $DXR_HOME
#ADD clang-3.3.tar.bz2 $DXR_HOME/
RUN git clone --recursive -b $DXR_BRANCH $DXR_REPO

RUN ln -s /usr/bin/nodejs /usr/bin/node
RUN env CC=clang CXX=clang++ make -C dxr
RUN virtualenv venv && venv/bin/pip install -r dxr/requirements.txt && cd dxr && ../venv/bin/python setup.py install

RUN mkdir templates src obj
COPY dxr.config $DXR_HOME/dxr.config
COPY entrypoint.py /entrypoint.py
COPY templates/* $DXR_HOME/templates/
COPY entrypoint-config.yml $DXR_HOME/entrypoint-config.yml

ENTRYPOINT ["/entrypoint.py"]
